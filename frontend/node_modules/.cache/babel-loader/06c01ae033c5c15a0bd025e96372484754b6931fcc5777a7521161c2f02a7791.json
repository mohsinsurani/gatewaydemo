{"ast":null,"code":"var _jsxFileName = \"/Users/admin/PycharmProjects/gatewayex/frontend/src/components/gateway_list.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GatewayList() {\n  _s();\n  const [gateways, setGateways] = useState([]);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\" // Use standard JSON content type\n    }\n  };\n\n  useEffect(() => {\n    const adminId = localStorage.getItem('admin_id');\n    const gate_list_url = `http://localhost:8000/api/gateway-lists/?admin_id=${adminId}`;\n    // Fetch gateways data from the backend API\n    axios.get(gate_list_url, config).then(response => {\n      setGateways(response.data);\n    }).catch(error => {\n      console.error('Error fetching gateways:', error);\n    });\n  }, []);\n  const formatLatitudeLongitude = (latitude, longitude) => {\n    const formattedLatitude = parseFloat(latitude).toFixed(2);\n    const formattedLongitude = parseFloat(longitude).toFixed(2);\n    if (formattedLatitude.endsWith('.00')) {\n      return `${formattedLatitude.slice(0, -3)}, ${formattedLongitude.slice(0, -3)}`;\n    }\n    return `${formattedLatitude}, ${formattedLongitude}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        paddingLeft: 20\n      },\n      children: [\" User Logged IN: \", localStorage.getItem(\"username\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: 220,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"List of Gateways\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gateway-list\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Antenna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Lat and Long\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: gateways.map((gateway, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"gateway-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: gateway.antenna_diameter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: gateway.location_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatLatitudeLongitude(gateway.latitude, gateway.longitude)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(GatewayList, \"nDFS7R3EgnQO7hZaeBTeZdh9Zf8=\");\n_c = GatewayList;\nexport default GatewayList;\nvar _c;\n$RefreshReg$(_c, \"GatewayList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","GatewayList","_s","gateways","setGateways","config","headers","adminId","localStorage","getItem","gate_list_url","get","then","response","data","catch","error","console","formatLatitudeLongitude","latitude","longitude","formattedLatitude","parseFloat","toFixed","formattedLongitude","endsWith","slice","children","style","paddingLeft","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","className","map","gateway","index","antenna_diameter","location_name","_c","$RefreshReg$"],"sources":["/Users/admin/PycharmProjects/gatewayex/frontend/src/components/gateway_list.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\n\nfunction GatewayList() {\n    const [gateways, setGateways] = useState([]);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\" // Use standard JSON content type\n        }\n    };\n    useEffect(() => {\n        const adminId = localStorage.getItem('admin_id');\n\n        const gate_list_url = `http://localhost:8000/api/gateway-lists/?admin_id=${adminId}`;\n        // Fetch gateways data from the backend API\n        axios\n            .get(gate_list_url, config)\n            .then((response) => {\n                setGateways(response.data);\n            })\n            .catch((error) => {\n                console.error('Error fetching gateways:', error);\n            });\n    }, []);\n\n    const formatLatitudeLongitude = (latitude, longitude) => {\n        const formattedLatitude = parseFloat(latitude).toFixed(2);\n        const formattedLongitude = parseFloat(longitude).toFixed(2);\n\n        if (formattedLatitude.endsWith('.00')) {\n            return `${formattedLatitude.slice(0, -3)}, ${formattedLongitude.slice(0, -3)}`;\n        }\n\n        return `${formattedLatitude}, ${formattedLongitude}`;\n    };\n\n    return (\n        <div>\n            <p style={{paddingLeft: 20}}> User Logged IN: {localStorage.getItem(\"username\")}</p>\n            <div style={{paddingLeft: 220, display: \"flex\", flexDirection: \"column\"}}>\n                <p>List of Gateways</p>\n                <div className=\"gateway-list\">\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Antenna</th>\n                            <th>Location</th>\n                            <th>Lat and Long</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {gateways.map((gateway, index) => (\n                            <tr key={index} className=\"gateway-row\">\n                                <td>{gateway.antenna_diameter}</td>\n                                <td>{gateway.location_name}</td>\n                                <td>{formatLatitudeLongitude(gateway.latitude, gateway.longitude)}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default GatewayList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}