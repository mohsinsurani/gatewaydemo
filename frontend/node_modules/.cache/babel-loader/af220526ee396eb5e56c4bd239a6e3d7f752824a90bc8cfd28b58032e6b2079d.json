{"ast":null,"code":"var _jsxFileName = \"/Users/admin/PycharmProjects/gatewayex/frontend/src/components/gateway_list.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ListView from '../listview'; // Import the GridView component\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data11 = [{\n  id: 1,\n  name: 'Item 1',\n  description: 'Description 1'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}\n\n// Add more items as needed\n];\n\nfunction GatewayList() {\n  _s();\n  const [gateways, setGateways] = useState([]);\n  const [updatedGateways, setUpdatedGateways] = useState([]);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\" // Use standard JSON content type\n    }\n  };\n\n  useEffect(() => {\n    const data = {\n      admin_id: localStorage.getItem('admin_id')\n    };\n    // Fetch gateways data from the backend API\n    axios.get('http://localhost:8000/api/get-gateway-lists/', JSON.stringify(data), config).then(response => {\n      setGateways(response.data);\n    }).catch(error => {\n      console.error('Error fetching gateways:', error);\n    });\n  }, []);\n  const handleInputChange = (index, field, value) => {\n    const updated = [...updatedGateways];\n    if (!updated[index]) updated[index] = {};\n    updated[index][field] = value;\n    setUpdatedGateways(updated);\n  };\n  const handleUpdateClick = index => {\n    const updatedGateway = updatedGateways[index];\n    if (updatedGateway) {\n      // onUpdate(index, updatedGateway);\n      // Clear the updated data after updating\n      setUpdatedGateways([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: gateways.map((gateway, index) => {\n      var _updatedGateways$inde, _updatedGateways$inde2, _updatedGateways$inde3, _updatedGateways$inde4;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Antenna Diameter: \", gateway.antenna_diameter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Antenna Diameter\",\n          value: ((_updatedGateways$inde = updatedGateways[index]) === null || _updatedGateways$inde === void 0 ? void 0 : _updatedGateways$inde.antenna_diameter) || '',\n          onChange: e => handleInputChange(index, 'antenna_diameter', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Location Name: \", gateway.location_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Location Name\",\n          value: ((_updatedGateways$inde2 = updatedGateways[index]) === null || _updatedGateways$inde2 === void 0 ? void 0 : _updatedGateways$inde2.location_name) || '',\n          onChange: e => handleInputChange(index, 'location_name', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Latitude: \", gateway.latitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Latitude\",\n          value: ((_updatedGateways$inde3 = updatedGateways[index]) === null || _updatedGateways$inde3 === void 0 ? void 0 : _updatedGateways$inde3.latitude) || '',\n          onChange: e => handleInputChange(index, 'latitude', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Longitude: \", gateway.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Longitude\",\n          value: ((_updatedGateways$inde4 = updatedGateways[index]) === null || _updatedGateways$inde4 === void 0 ? void 0 : _updatedGateways$inde4.longitude) || '',\n          onChange: e => handleInputChange(index, 'longitude', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateClick(index),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(GatewayList, \"1H8RvxWH5kWfzMeCzpU01DuilOg=\");\n_c = GatewayList;\nexport default GatewayList;\nvar _c;\n$RefreshReg$(_c, \"GatewayList\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","ListView","axios","jsxDEV","_jsxDEV","data11","id","name","description","GatewayList","_s","gateways","setGateways","updatedGateways","setUpdatedGateways","config","headers","data","admin_id","localStorage","getItem","get","JSON","stringify","then","response","catch","error","console","handleInputChange","index","field","value","updated","handleUpdateClick","updatedGateway","children","map","gateway","_updatedGateways$inde","_updatedGateways$inde2","_updatedGateways$inde3","_updatedGateways$inde4","antenna_diameter","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","location_name","latitude","longitude","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/PycharmProjects/gatewayex/frontend/src/components/gateway_list.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport ListView from '../listview'; // Import the GridView component\nimport axios from \"axios\";\n\nconst data11 = [\n    {id: 1, name: 'Item 1', description: 'Description 1'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n\n    // Add more items as needed\n];\n\n\n\nfunction GatewayList() {\n    const [gateways, setGateways] = useState([]);\n    const [updatedGateways, setUpdatedGateways] = useState([]);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\" // Use standard JSON content type\n        }\n    };\n    useEffect(() => {\n        const data = {\n            admin_id: localStorage.getItem('admin_id')\n        };\n        // Fetch gateways data from the backend API\n        axios.get('http://localhost:8000/api/get-gateway-lists/', JSON.stringify(data), config)\n            .then((response) => {\n                setGateways(response.data);\n            })\n            .catch((error) => {\n                console.error('Error fetching gateways:', error);\n            });\n    }, []);\n    const handleInputChange = (index, field, value) => {\n        const updated = [...updatedGateways];\n        if (!updated[index]) updated[index] = {};\n        updated[index][field] = value;\n        setUpdatedGateways(updated);\n    };\n\n    const handleUpdateClick = (index) => {\n        const updatedGateway = updatedGateways[index];\n        if (updatedGateway) {\n            // onUpdate(index, updatedGateway);\n            // Clear the updated data after updating\n            setUpdatedGateways([]);\n        }\n    };\n\n    return (\n        <div>\n            {gateways.map((gateway, index) => (\n                <div key={index}>\n                    <span>Antenna Diameter: {gateway.antenna_diameter}</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"New Antenna Diameter\"\n                        value={updatedGateways[index]?.antenna_diameter || ''}\n                        onChange={(e) => handleInputChange(index, 'antenna_diameter', e.target.value)}\n                    />\n                    <span>Location Name: {gateway.location_name}</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"New Location Name\"\n                        value={updatedGateways[index]?.location_name || ''}\n                        onChange={(e) => handleInputChange(index, 'location_name', e.target.value)}\n                    />\n                    <span>Latitude: {gateway.latitude}</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"New Latitude\"\n                        value={updatedGateways[index]?.latitude || ''}\n                        onChange={(e) => handleInputChange(index, 'latitude', e.target.value)}\n                    />\n                    <span>Longitude: {gateway.longitude}</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"New Longitude\"\n                        value={updatedGateways[index]?.longitude || ''}\n                        onChange={(e) => handleInputChange(index, 'longitude', e.target.value)}\n                    />\n                    <button onClick={() => handleUpdateClick(index)}>Update</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n\n\nexport default GatewayList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}