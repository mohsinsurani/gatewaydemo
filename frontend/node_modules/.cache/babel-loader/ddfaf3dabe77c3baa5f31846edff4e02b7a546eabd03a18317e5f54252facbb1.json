{"ast":null,"code":"var _jsxFileName = \"/Users/admin/PycharmProjects/gatewayex/frontend/src/components/admin_control.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ListView from '../listview';\nimport axios from \"axios\"; // Import the GridView component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: 1,\n  name: 'Item 1',\n  description: 'Description 1'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}\n\n// Add more items as needed\n];\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\" // Use standard JSON content type\n  }\n};\n\nfunction AdminControl({\n  userType\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const submit = () => {\n    if (username.trim() === '') {\n      // Display an error message if the username is empty\n      setErrorMessage(`${userType} fields cannot be empty`);\n    } else {\n      // Clear any previous error message\n      setErrorMessage('');\n      //   this.props.history.push(AdminAccess());\n      switch (userType) {\n        case 'Gateway':\n          gateway_delete_action();\n          break;\n        default:\n          create_operator_action();\n      }\n      // Handle login logic here (e.g., send username to the server)\n    }\n  };\n\n  const gateway_delete_action = () => {\n    const data = {\n      location_name: username\n    };\n    axios.post('http://localhost:8000/api/delete-gateway/', JSON.stringify(data), config).then(response => {\n      console.log(response.data);\n      alert(response.data.description);\n      // Handle data\n    }).catch(error => {\n      console.log(error);\n      alert(error.description);\n    });\n  };\n  const create_operator_action = () => {\n    const data = {\n      location_name: username\n    };\n    axios.post('http://localhost:8000/api/create-operator/', JSON.stringify(data), config).then(response => {\n      console.log(response.data);\n      alert(response.data.description);\n      // Handle data\n    }).catch(error => {\n      console.log(error);\n      alert(error.description);\n    });\n  };\n  const getLoginTitle = () => {\n    switch (userType) {\n      case 'Gateway':\n        return 'Delete the Gateway?';\n      default:\n        return 'Create an operator';\n    }\n  };\n  const getPlc = () => {\n    return `${userType} username`;\n  };\n  const geth2title = () => {\n    console.log(userType + \"Selected\");\n    switch (userType) {\n      case 'Gateway':\n        return `Gateway Deletion`;\n      default:\n        return `Operator Creation`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: geth2title()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: getPlc(),\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: '10px 24px'\n      },\n      onClick: submit,\n      children: getLoginTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminControl, \"/KftXeHJkscCitZvAfe4EMPJTG8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminControl;\nfunction GatewayForm({\n  userType\n}) {\n  _s2();\n  const [location_name, setLocation] = useState('');\n  const [antenna_dia, setAntenna] = useState('');\n  const [latitude, setLatitude] = useState('');\n  const [longtitude, setLongtitude] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\" // Use standard JSON content type\n    }\n  };\n\n  const insert = () => {\n    create_update_gateway(false);\n  };\n  const update = () => {\n    create_update_gateway(true);\n  };\n  const create_update_gateway = isUpdate => {\n    if (longtitude.trim() === '' || latitude.trim() === '' || location_name === '' || antenna_dia === '') {\n      // Display an error message if the username is empty\n      setErrorMessage(`fields cannot be empty`);\n    } else {\n      // Clear any previous error message\n      setErrorMessage('');\n      create_update_gateway(false);\n    }\n    const data = {\n      antenna_diameter: antenna_dia,\n      location_name: location_name,\n      latitude: latitude,\n      longitude: longtitude,\n      admin_id: localStorage.getItem(\"id\"),\n      create_update: isUpdate\n    };\n    axios.post('http://localhost:8000/api/create-gateway/', JSON.stringify(data), config).then(response => {\n      let alert_str = \"Gateway created successfully\";\n      if (isUpdate) {\n        alert_str = \"Gateway updated successfully\";\n      }\n      alert(alert_str);\n      // Handle data\n    }).catch(error => {\n      console.log(error);\n      alert(error.description);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gateway Creation and Updation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Antenna diameter\",\n      value: antenna_dia,\n      onChange: e => setAntenna(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Location name\",\n      value: location_name,\n      onChange: e => setLocation(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Latitude\",\n      value: latitude,\n      onChange: e => setLatitude(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Longtitude\",\n      value: longtitude,\n      onChange: e => setLongtitude(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: '10px 24px'\n      },\n      onClick: insert,\n      children: \"Insert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: '10px 24px'\n      },\n      onClick: update,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}\n_s2(GatewayForm, \"9QQz6lzazy7hoggw+R9RIdp2aD8=\");\n_c2 = GatewayForm;\nfunction List(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: props.list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n}\n_c3 = List;\nfunction AdminAccess() {\n  _s3();\n  const [gateways, setGateways] = useState([]);\n  const [operators, setOperators] = useState([]);\n  useEffect(() => {\n    const data = {\n      admin_id: localStorage.getItem('id').toString()\n    };\n    // Fetch gateways data from the backend API\n    axios.post('http://localhost:8000/api/gateway-lists/', JSON.stringify(data), config).then(response => {\n      setGateways(response.data);\n    }).catch(error => {\n      console.error('Error fetching gateways:', error);\n    });\n    axios.post('http://localhost:8000/api/operator-lists/', JSON.stringify(data), config).then(response => {\n      setOperators(response.data);\n    }).catch(error => {\n      console.error('Error fetching operators:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminControl, {\n        userType: \"Operator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AdminControl, {\n        userType: \"Gateway\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GatewayForm, {\n        userType: \"Operator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: 20,\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginTop: -420\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"List of Operators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), operators.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gateway-list\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Antenna\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Lat/Long\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: gateways.map((gateway, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: gateway.antenna_diameter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: gateway.location_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: `${gateway.latitude}, ${gateway.longitude}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n}\n_s3(AdminAccess, \"nYuo9if2ajrSLjtmqF/44YRE5ko=\");\n_c4 = AdminAccess;\nexport default AdminAccess;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AdminControl\");\n$RefreshReg$(_c2, \"GatewayForm\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"AdminAccess\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","ListView","axios","jsxDEV","_jsxDEV","data","id","name","description","config","headers","AdminControl","userType","_s","username","setUsername","errorMessage","setErrorMessage","navigate","submit","trim","gateway_delete_action","create_operator_action","location_name","post","JSON","stringify","then","response","console","log","alert","catch","error","getLoginTitle","getPlc","geth2title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","margin","onClick","_c","GatewayForm","_s2","setLocation","antenna_dia","setAntenna","latitude","setLatitude","longtitude","setLongtitude","insert","create_update_gateway","update","isUpdate","antenna_diameter","longitude","admin_id","localStorage","getItem","create_update","alert_str","_c2","List","props","display","flexDirection","list","map","item","_c3","AdminAccess","_s3","gateways","setGateways","operators","setOperators","toString","paddingLeft","marginTop","gateway","index","_c4","$RefreshReg$"],"sources":["/Users/admin/PycharmProjects/gatewayex/frontend/src/components/admin_control.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport ListView from '../listview';\nimport axios from \"axios\"; // Import the GridView component\n\nconst data = [\n    {id: 1, name: 'Item 1', description: 'Description 1'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n\n    // Add more items as needed\n];\nconst config = {\n    headers: {\n        \"Content-Type\": \"application/json\" // Use standard JSON content type\n    }\n};\n\nfunction AdminControl({userType}) {\n    const [username, setUsername] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n    const submit = () => {\n        if (username.trim() === '') {\n            // Display an error message if the username is empty\n            setErrorMessage(`${userType} fields cannot be empty`);\n        } else {\n            // Clear any previous error message\n            setErrorMessage('');\n            //   this.props.history.push(AdminAccess());\n            switch (userType) {\n                case 'Gateway':\n                    gateway_delete_action()\n                    break\n                default:\n                    create_operator_action()\n            }\n            // Handle login logic here (e.g., send username to the server)\n        }\n    };\n\n    const gateway_delete_action = () => {\n        const data = {\n            location_name: username\n        };\n        axios\n            .post('http://localhost:8000/api/delete-gateway/', JSON.stringify(data), config)\n            .then((response) => {\n                console.log(response.data);\n                alert(response.data.description)\n                // Handle data\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(error.description)\n            })\n    }\n\n    const create_operator_action = () => {\n        const data = {\n            location_name: username\n        };\n        axios\n            .post('http://localhost:8000/api/create-operator/', JSON.stringify(data), config)\n            .then((response) => {\n                console.log(response.data);\n                alert(response.data.description)\n                // Handle data\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(error.description)\n            })\n    }\n    const getLoginTitle = () => {\n        switch (userType) {\n            case 'Gateway':\n                return 'Delete the Gateway?';\n            default:\n                return 'Create an operator';\n        }\n    };\n\n    const getPlc = () => {\n        return `${userType} username`;\n    };\n\n    const geth2title = () => {\n        console.log(userType + \"Selected\")\n        switch (userType) {\n            case 'Gateway':\n                return `Gateway Deletion`;\n            default:\n                return `Operator Creation`;\n        }\n    };\n    return (\n        <div className=\"login-form\">\n            <h2>{geth2title()}</h2>\n            <input\n                type=\"text\"\n                placeholder={getPlc()}\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                className=\"text-input\"\n            />\n            <button style={{margin: '10px 24px'}} onClick={submit}>{getLoginTitle()}</button>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        </div>\n    );\n}\n\nfunction GatewayForm({userType}) {\n    const [location_name, setLocation] = useState('');\n    const [antenna_dia, setAntenna] = useState('');\n    const [latitude, setLatitude] = useState('');\n    const [longtitude, setLongtitude] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\" // Use standard JSON content type\n        }\n    };\n    const insert = () => {\n        create_update_gateway(false)\n    };\n\n    const update = () => {\n        create_update_gateway(true)\n    };\n\n    const create_update_gateway = (isUpdate) => {\n        if (longtitude.trim() === '' || latitude.trim() === '' || location_name === '' || antenna_dia === '') {\n            // Display an error message if the username is empty\n            setErrorMessage(`fields cannot be empty`);\n        } else {\n            // Clear any previous error message\n            setErrorMessage('');\n            create_update_gateway(false)\n        }\n        const data = {\n            antenna_diameter: antenna_dia,\n            location_name: location_name,\n            latitude: latitude,\n            longitude: longtitude,\n            admin_id: localStorage.getItem(\"id\"),\n            create_update: isUpdate\n        };\n        axios\n            .post('http://localhost:8000/api/create-gateway/', JSON.stringify(data), config)\n            .then((response) => {\n                let alert_str = \"Gateway created successfully\";\n                if (isUpdate) {\n                    alert_str = \"Gateway updated successfully\"\n                }\n\n                alert(alert_str)\n                // Handle data\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(error.description)\n            })\n    }\n\n    return (\n        <div className=\"login-form\">\n            <h2>Gateway Creation and Updation</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Antenna diameter\"\n                value={antenna_dia}\n                onChange={(e) => setAntenna(e.target.value)}\n                className=\"text-input\"\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Location name\"\n                value={location_name}\n                onChange={(e) => setLocation(e.target.value)}\n                className=\"text-input\"\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Latitude\"\n                value={latitude}\n                onChange={(e) => setLatitude(e.target.value)}\n                className=\"text-input\"\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Longtitude\"\n                value={longtitude}\n                onChange={(e) => setLongtitude(e.target.value)}\n                className=\"text-input\"\n            /><p></p>\n            <button style={{margin: '10px 24px'}} onClick={insert}>{\"Insert\"}</button>\n            <button style={{margin: '10px 24px'}} onClick={update}>{\"Update\"}</button>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        </div>\n    );\n}\n\nfunction List(props) {\n    return (\n        <div style={{display: \"flex\", flexDirection: \"column\"}}>\n            {props.list.map((item) => (\n                <div>{item.description}</div>\n            ))}\n        </div>\n    );\n}\n\nfunction AdminAccess() {\n    const [gateways, setGateways] = useState([]);\n    const [operators, setOperators] = useState([]);\n\n    useEffect(() => {\n        const data = {\n            admin_id: (localStorage.getItem('id')).toString()\n        };\n        // Fetch gateways data from the backend API\n        axios\n            .post('http://localhost:8000/api/gateway-lists/', JSON.stringify(data), config)\n            .then((response) => {\n                setGateways(response.data);\n            })\n            .catch((error) => {\n                console.error('Error fetching gateways:', error);\n            });\n\n        axios\n            .post('http://localhost:8000/api/operator-lists/', JSON.stringify(data), config)\n            .then((response) => {\n                setOperators(response.data);\n            })\n            .catch((error) => {\n                console.error('Error fetching operators:', error);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"left-container\">\n                <AdminControl userType=\"Operator\"/>\n                <AdminControl userType='Gateway'/>\n                <GatewayForm userType=\"Operator\"/>\n            </div>\n            <div>\n                <div style={{paddingLeft: 20, display: \"flex\", flexDirection: \"row\", marginTop: -420}}>\n                    <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                        <p>List of Operators</p>\n                        {operators.map((item) => (\n                            <div>{item.username}</div>\n                        ))}\n                    </div>\n                    <div className=\"gateway-list\">\n                        <table>\n                            <thead>\n                            <tr>\n                                <th>Antenna</th>\n                                <th>Location</th>\n                                <th>Lat/Long</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {gateways.map((gateway, index) => (\n                                <tr key={index}>\n                                    <td>{gateway.antenna_diameter}</td>\n                                    <td>{gateway.location_name}</td>\n                                    <td>{`${gateway.latitude}, ${gateway.longitude}`}</td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AdminAccess;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}