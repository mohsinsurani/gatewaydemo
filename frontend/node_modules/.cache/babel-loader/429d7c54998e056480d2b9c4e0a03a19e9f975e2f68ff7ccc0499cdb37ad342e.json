{"ast":null,"code":"var _jsxFileName = \"/Users/admin/PycharmProjects/gatewayex/frontend/src/App.js\",\n  _s2 = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Admin_control from './components/admin_control'; // Import the NewPage component, not a .js file\n\nimport { BrowserRouter as Router, Switch, Route, useNavigate } from 'react-router-dom';\nimport AdminAccess from './components/admin_control';\nimport { useHistory } from 'react-router-dom'; // Import useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm({\n  userType\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [username, setUsername] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    if (username.trim() === '') {\n      // Display an error message if the username is empty\n      setErrorMessage('Username cannot be empty');\n    } else {\n      // Clear any previous error message\n      setErrorMessage('');\n      navigate(\"admin\");\n      //   this.props.history.push(AdminAccess());\n\n      // Handle login logic here (e.g., send username to the server)\n      console.log(`Logging in as ${userType} with username: ${username}`);\n    }\n  };\n  const getPlc = () => {\n    switch (userType) {\n      case 'Admin':\n        return `Admin Username`;\n      case 'Operator':\n        return `Operator Username`;\n      default:\n        return `Administrator`;\n    }\n  };\n  const geth2title = () => {\n    switch (userType) {\n      case 'Admin':\n        return `Administrator Login`;\n      case 'Operator':\n        return `Operator Login`;\n      default:\n        return `Create`;\n    }\n  };\n  const getLoginTitle = () => {\n    switch (userType) {\n      case 'Admin':\n        return `Login as Admin`;\n      case 'Operator':\n        return `Login as Operator`;\n      default:\n        return `Create an Administrator`;\n    }\n  };\n  const setActionSubmit = () => {\n    switch (userType) {\n      case 'Admin':\n        return `Login as Admin`;\n      case 'Operator':\n        return `Login as Operator`;\n      default:\n        handlecreateAdmin();\n    }\n  };\n  const handlecreateAdmin = () => {\n    _s();\n    const {\n      data,\n      error,\n      isFetching\n    } = useQuery(\"userData\", async () => {\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_API_URL}/get-health-data`, {\n        user_ids: selectedUsers,\n        limit: \"3\"\n      });\n      setUsersData(data.result);\n      return data;\n    });\n    fetch('http://localhost:8000/api/create-admin/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username\n      })\n    }).then(response => {\n      response.json();\n    }).then(data => {\n      console.log(data);\n      // setResponseMessage(data.message);\n      navigate(\"admin\");\n    }).catch(errorResp => {\n      console.error('Error:', errorResp);\n      alert(`Something went wrong: ${errorResp.value}`);\n    });\n  };\n  _s(handlecreateAdmin, \"I7CDMOJKo3rE92HW6uVZpLOsMSo=\", true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: geth2title()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: getPlc(),\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setActionSubmit,\n      children: getLoginTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s2(LoginForm, \"/KftXeHJkscCitZvAfe4EMPJTG8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      userType: \"Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      userType: \"Operator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      userType: \"CreateAdmin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n//\n// export default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useState","withRouter","Admin_control","BrowserRouter","Router","Switch","Route","useNavigate","AdminAccess","useHistory","jsxDEV","_jsxDEV","LoginForm","userType","_s2","_s","$RefreshSig$","username","setUsername","errorMessage","setErrorMessage","navigate","handleLogin","trim","console","log","getPlc","geth2title","getLoginTitle","setActionSubmit","handlecreateAdmin","data","error","isFetching","useQuery","axios","post","process","env","REACT_APP_API_URL","user_ids","selectedUsers","limit","setUsersData","result","fetch","method","headers","body","JSON","stringify","then","response","json","catch","errorResp","alert","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","_c","App","_c2","$RefreshReg$"],"sources":["/Users/admin/PycharmProjects/gatewayex/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Admin_control from './components/admin_control'; // Import the NewPage component, not a .js file\n\nimport {BrowserRouter as Router, Switch, Route, useNavigate} from 'react-router-dom';\nimport AdminAccess from './components/admin_control';\nimport { useHistory } from 'react-router-dom'; // Import useHistory\n\nfunction LoginForm({ userType }) {\n  const [username, setUsername] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    if (username.trim() === '') {\n      // Display an error message if the username is empty\n      setErrorMessage('Username cannot be empty');\n    } else {\n      // Clear any previous error message\n      setErrorMessage('');\n      navigate(\"admin\");\n      //   this.props.history.push(AdminAccess());\n\n      // Handle login logic here (e.g., send username to the server)\n      console.log(`Logging in as ${userType} with username: ${username}`);\n    }\n  };\n\n   const getPlc = () => {\n    switch (userType) {\n      case 'Admin':\n        return `Admin Username`;\n      case 'Operator':\n        return `Operator Username`;\n      default:\n        return `Administrator`;\n    }\n  };\n\n   const geth2title = () => {\n    switch (userType) {\n      case 'Admin':\n        return `Administrator Login`;\n      case 'Operator':\n        return `Operator Login`;\n      default:\n        return `Create`;\n    }\n  };\n   const getLoginTitle = () => {\n    switch (userType) {\n      case 'Admin':\n        return `Login as Admin`;\n      case 'Operator':\n        return `Login as Operator`;\n      default:\n        return `Create an Administrator`;\n    }\n  };\n\n    const setActionSubmit = () => {\n        switch (userType) {\n          case 'Admin':\n            return `Login as Admin`;\n          case 'Operator':\n            return `Login as Operator`;\n          default:\n            handlecreateAdmin();\n        }\n      };\n\n    const handlecreateAdmin = () => {\n const { data, error, isFetching }: UserQueryTypes = useQuery(\"userData\", async () => {\n    const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/get-health-data`, { user_ids: selectedUsers, limit: \"3\" });\n    setUsersData(data.result);\n    return data;\n  });\n    fetch('http://localhost:8000/api/create-admin/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        'username': username\n    }),\n    })\n      .then((response) => {\n          response.json()\n      })\n      .then((data) => {\n          console.log(data);\n        // setResponseMessage(data.message);\n              navigate(\"admin\");\n      })\n      .catch((errorResp) => {\n        console.error('Error:', errorResp);\n        alert(`Something went wrong: ${errorResp.value}`)\n      });\n  };\n  return (\n    <div className=\"login-form\">\n      <h2>{geth2title()}</h2>\n      <input\n        type=\"text\"\n        placeholder={getPlc()}\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        className=\"text-input\"\n      />\n      <button onClick={setActionSubmit}>{getLoginTitle()}</button>\n              {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n    </div>\n  );\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"center-container\">\n      <LoginForm userType=\"Admin\" />\n      <LoginForm userType=\"Operator\" />\n        <LoginForm userType=\"CreateAdmin\" />\n    </div>\n  );\n}\n\nexport default App;\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n//\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}