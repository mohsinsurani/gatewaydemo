{"ast":null,"code":"import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */function () {\n  function Virtualization(instance) {\n    this.elementDifference = 0;\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n  Virtualization.prototype.isNgTemplate = function () {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  };\n  /**\n   * Checks if the platform is a Vue and its template property is a function type.\n   *\n   * @returns {boolean} indicating the result of the check\n   */\n  Virtualization.prototype.isVueFunctionTemplate = function () {\n    return this.listViewInstance.isVue && typeof this.listViewInstance.template === 'function';\n  };\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n  Virtualization.prototype.uiVirtualization = function () {\n    this.commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n    this.templateFunction = compile(this.listViewInstance.template || this.commonTemplate, this.listViewInstance);\n    this.groupTemplateFunction = compile(this.listViewInstance.groupTemplate || this.commonTemplate, this.listViewInstance);\n    this.wireScrollEvent(false);\n    var curViewDS = this.listViewInstance.curViewDS;\n    var firstDs = curViewDS.slice(0, 1);\n    this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n    // eslint-disable-next-line\n    this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n    this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n      className: classNames.container\n    });\n    this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n    this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    var otherDs = curViewDS.slice(1, this.domItemCount);\n    var listItems = ListBase.createListItemFromJson(\n    // eslint-disable-next-line\n    this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    append(listItems, this.listViewInstance.ulElement);\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    this.topElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n    this.bottomElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    this.topElement.style.height = 0 + 'px';\n    this.bottomElement.style.height = this.totalHeight + 'px';\n    this.topElementHeight = 0;\n    this.bottomElementHeight = this.totalHeight;\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  };\n  Virtualization.prototype.wireScrollEvent = function (destroy) {\n    if (!destroy) {\n      if (this.listViewInstance.isWindow) {\n        this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n        window.addEventListener('scroll', this.onVirtualScroll);\n      } else {\n        EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n      }\n    } else {\n      if (this.listViewInstance.isWindow === true) {\n        window.removeEventListener('scroll', this.onVirtualScroll);\n        window.removeEventListener('scroll', this.updateUl);\n      } else {\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n      }\n    }\n  };\n  Virtualization.prototype.updateUlContainer = function (e) {\n    var listDiff;\n    var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n    if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n      this.listViewInstance.updateLiElementHeight();\n    }\n    if (this.listViewInstance.isWindow) {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    } else {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    }\n    if ((listDiff - 1) * this.listViewInstance.liElementHeight < 0) {\n      virtualElementContainer.style.top = '0px';\n    } else {\n      virtualElementContainer.style.top = listDiff * this.listViewInstance.liElementHeight + 'px';\n    }\n  };\n  Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n    var height = parseFloat(formatUnit(this.listViewInstance.height));\n    var itemCount;\n    if (this.listViewInstance.isWindow) {\n      itemCount = Math.round(window.innerHeight / this.listItemHeight * windowElementCount);\n    } else {\n      if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n        // eslint-disable-next-line max-len\n        itemCount = Math.round(this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight * listElementCount);\n      } else {\n        itemCount = Math.round(height / this.listItemHeight * listElementCount);\n      }\n    }\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n    return itemCount;\n  };\n  Virtualization.prototype.uiIndicesInitialization = function () {\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    var data = this.listViewInstance.curViewDS;\n    for (var i = 0; i < data.length; i++) {\n      if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(i);\n      }\n      // eslint-disable-next-line\n      if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n        // eslint-disable-next-line\n        this.uiIndices.disabledItemIndices.push(i);\n      }\n    }\n    if (this.isNgTemplate()) {\n      var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n      for (var index = 0; index < items.length; index++) {\n        items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n      }\n    }\n  };\n  Virtualization.prototype.refreshItemHeight = function () {\n    if (this.listViewInstance.curViewDS.length) {\n      var curViewDS = this.listViewInstance.curViewDS;\n      this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.bottomElementHeight = this.totalHeight;\n      this.bottomElement.style.height = this.totalHeight + 'px';\n    }\n  };\n  Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  };\n  Virtualization.prototype.onVirtualUiScroll = function (e) {\n    var _a;\n    var startingHeight;\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    var scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    _a = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n    if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n      this.topElement.style.height = this.topElementHeight + 'px';\n      this.bottomElement.style.height = this.bottomElementHeight + 'px';\n      if (scroll > this.scrollPosition) {\n        var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, true);\n        } else {\n          this.onNormalScroll(listDiff, true);\n        }\n      } else {\n        var listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, false);\n        } else {\n          this.onNormalScroll(listDiff, false);\n        }\n      }\n    }\n    this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n    if (typeof this.listViewInstance.onUIScrolled === 'function') {\n      this.listViewInstance.onUIScrolled();\n    }\n    this.scrollPosition = scroll;\n  };\n  Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n    var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n    for (var i = 0; i < elements.length; i++) {\n      this.updateUI(elements[i], index);\n      index++;\n    }\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  };\n  Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (var i = 0; i < listDiff; i++) {\n        var index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (var i = 0; i < listDiff; i++) {\n        var index = --this.uiFirstIndex;\n        var target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  };\n  Virtualization.prototype.updateUiContent = function (element, index) {\n    // eslint-disable-next-line\n    var curViewDs = this.listViewInstance.curViewDS;\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ?\n      // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.id] : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n      // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.text];\n    }\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        var textContent = element.querySelector('.' + classNames.textContent);\n        var target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n      var textContent = element.querySelector('.' + classNames.textContent);\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n        }\n      }\n    }\n  };\n  Virtualization.prototype.changeElementAttributes = function (element, index) {\n    element.classList.remove(classNames.disable);\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n    element.style.display = '';\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n    if (this.listViewInstance.showCheckBox) {\n      var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  };\n  Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n    var _this = this;\n    var resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n    if (!isNullOrUndefined(fields)) {\n      ds.some(function (data, index) {\n        if (fields[_this.listViewInstance.fields.id] &&\n        // eslint-disable-next-line\n        fields[_this.listViewInstance.fields.id]\n        // eslint-disable-next-line\n        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n    return resultJSON;\n  };\n  Virtualization.prototype.getSelectedItems = function () {\n    var _this = this;\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      var dataCollection = [];\n      var textCollection = [];\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        var curViewDS_1 = this.listViewInstance.curViewDS;\n        if (this.listViewInstance.showCheckBox) {\n          var indices = this.uiIndices.activeIndices;\n          for (var i = 0; i < indices.length; i++) {\n            dataCollection.push(curViewDS_1[indices[i]]);\n          }\n          return {\n            text: dataCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n            })\n          };\n        } else {\n          return {\n            text: curViewDS_1[this.activeIndex],\n            data: curViewDS_1[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n          };\n        }\n      } else {\n        var curViewDS_2 = this.listViewInstance.curViewDS;\n        var text = this.listViewInstance.fields.text;\n        if (this.listViewInstance.showCheckBox) {\n          var indexArray = this.uiIndices.activeIndices;\n          for (var i = 0; i < indexArray.length; i++) {\n            textCollection.push(curViewDS_2[indexArray[i]][\"\" + text]);\n            // eslint-disable-next-line\n            dataCollection.push(curViewDS_2[indexArray[i]]);\n          }\n          // eslint-disable-next-line\n          var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: textCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return dataSource_1.indexOf(curViewDS_2[index]);\n            })\n          };\n        } else {\n          // eslint-disable-next-line\n          var dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n            // eslint-disable-next-line\n            data: curViewDS_2[this.activeIndex],\n            index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  };\n  Virtualization.prototype.selectItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      var isSelected = this.activeIndex === resutJSON.index;\n      var isChecked = void 0;\n      this.activeIndex = resutJSON.index;\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        // eslint-disable-next-line\n        var eventArgs = void 0;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          var curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n  };\n  Virtualization.prototype.enableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n  Virtualization.prototype.disableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.disabledItemIndices.push(resutJSON.index);\n    }\n  };\n  Virtualization.prototype.showItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n  Virtualization.prototype.hideItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n    }\n  };\n  Virtualization.prototype.removeItem = function (obj) {\n    var dataSource;\n    var curViewDS = this.listViewInstance.curViewDS;\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n    // eslint-disable-next-line\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        this.removeUiItem(resutJSON.index);\n      }\n    }\n    var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    var index = listDataSource.indexOf(dataSource);\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    }\n    // recollect all the list item into collection\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.setCheckboxLI = function (li, e) {\n    var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.setSelectLI = function (li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  };\n  Virtualization.prototype.checkedItem = function (checked) {\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      var data = this.listViewInstance.curViewDS;\n      for (var index = 0; index < data.length; index++) {\n        if (!data[index].isHeader) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      }\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  };\n  Virtualization.prototype.addUiItem = function (index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    var curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n    if (parseFloat(this.bottomElement.style.height)) {\n      var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      var target = void 0;\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n      if (target) {\n        this.updateUI(liItem, index, target);\n        if (this.listViewInstance.isWindow === true) {\n          window.scrollTo(0, pageYOffset + this.listItemHeight);\n        } else {\n          this.listViewInstance.element.scrollTop += this.listItemHeight;\n        }\n      }\n    }\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n  Virtualization.prototype.removeUiItem = function (index) {\n    this.totalHeight -= this.listItemHeight;\n    var curViewDS = this.listViewInstance.curViewDS[index];\n    var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n  Virtualization.prototype.changeUiIndices = function (index, increment) {\n    var keys = Object.keys(this.uiIndices);\n    for (var ind = 0; ind < keys.length; ind++) {\n      this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    }\n  };\n  Virtualization.prototype.addItem = function (data, fields, dataSource) {\n    for (var i = 0; i < data.length; i++) {\n      var currentItem = data[i];\n      // push the given data to main data array\n      dataSource.push(currentItem);\n      // recalculate all the group data or other datasource related things\n      this.listViewInstance.setViewDataSource(dataSource);\n      // render list items for first time due to no datasource present earlier\n      if (!this.domItemCount) {\n        // fresh rendering for first time\n        if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n          this.listViewInstance.listBaseOption.template = null;\n          this.listViewInstance.listBaseOption.groupTemplate = null;\n          this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n        }\n        this.uiVirtualization();\n        // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n      } else if (this.domItemCount < this.expectedDomItemCount) {\n        var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n        if (ds instanceof Array) {\n          if (this.listViewInstance.ulElement) {\n            var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n            // inject new list item into DOM\n            this.createAndInjectNewItem(currentItem, index);\n            // check for group header item\n            var curViewDS = this.listViewInstance.curViewDS[index - 1];\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index;\n              // inject new group header into DOM for previously created list item\n              this.createAndInjectNewItem(curViewDS, index);\n            }\n          }\n          // recollect all the list item into collection\n          this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        // eslint-disable-next-line\n        var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n        // virtually new add list item based on the scollbar position\n        this.addUiItem(index);\n        // check for group header item needs to be added\n        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          this.addUiItem(index - 1);\n        }\n      }\n    }\n  };\n  Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n    // generate li item for given datasource\n    var target;\n    var li = ListBase.createListItemFromJson(this.listViewInstance.createElement,\n    // eslint-disable-next-line\n    [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    // check for target element whether to insert before last item or group item\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    }\n    if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n      var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n      if (targetEle) {\n        target = targetEle.nextElementSibling;\n      }\n    }\n    // insert before the target element\n    this.listViewInstance.ulElement.insertBefore(li[0], target);\n    // increment internal DOM count, last index count for new element\n    this.domItemCount++;\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    }\n    // recalculate the current item height, to avoid jumpy scroller\n    this.refreshItemHeight();\n  };\n  Virtualization.prototype.createUIItem = function (args) {\n    var template = document.createElement('div');\n    this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n    if (this.listViewInstance.isReact) {\n      this.commonTemplate = null;\n    }\n    if (this.listViewInstance.showCheckBox) {\n      // eslint-disable-next-line\n      this.listViewInstance.renderCheckbox(args);\n      if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox) && !isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n        var div_1 = document.createElement('div');\n        var nodes = this.templateFunction(this.templateData, this.listViewInstance);\n        if (this.listViewInstance.template && this.listViewInstance.isReact) {\n          this.listViewInstance.renderReactTemplates();\n        }\n        [].slice.call(nodes).forEach(function (ele) {\n          div_1.appendChild(ele);\n        });\n        if (div_1.children && div_1.children[0]) {\n          div_1.children[0].classList.add('e-checkbox');\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div_1.children[0].classList.add('e-checkbox-left');\n          } else {\n            div_1.children[0].classList.add('e-checkbox-right');\n          }\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div_1.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div_1.childNodes[0].children[0]);\n          } else {\n            div_1.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n          }\n          template.innerHTML = div_1.innerHTML;\n        }\n      } else {\n        var div_2 = document.createElement('div');\n        var nodes = this.templateFunction(this.templateData, this.listViewInstance);\n        if (this.listViewInstance.template && this.listViewInstance.isReact) {\n          this.listViewInstance.renderReactTemplates();\n        }\n        [].slice.call(nodes).forEach(function (ele) {\n          div_2.appendChild(ele);\n        });\n        template.innerHTML = div_2.innerHTML;\n      }\n    } else {\n      var nodes = this.templateFunction(this.templateData, this.listViewInstance);\n      if (this.listViewInstance.template && this.listViewInstance.isReact) {\n        this.listViewInstance.renderReactTemplates();\n      }\n      [].slice.call(nodes).forEach(function (ele) {\n        template.appendChild(ele);\n      });\n    }\n    if (args.curData.isHeader) {\n      this.headerData = args.curData;\n    }\n    var groupTemplate = this.listViewInstance.createElement('div');\n    if (this.listViewInstance.fields.groupBy) {\n      var nodes = this.groupTemplateFunction(this.headerData, this.listViewInstance);\n      if (this.listViewInstance.template && this.listViewInstance.isReact) {\n        this.listViewInstance.renderReactTemplates();\n      }\n      [].slice.call(nodes).forEach(function (ele) {\n        groupTemplate.appendChild(ele);\n      });\n    }\n    if ((!this.listViewInstance.isReact || typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\") || typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\")) && !this.listViewInstance.isVue) {\n      args.item.innerHTML = '';\n    }\n    args.item.context = {\n      data: args.curData,\n      nodes: {\n        flatTemplateNodes: [],\n        groupTemplateNodes: []\n      }\n    };\n    for (var i = 0; i < template.children.length; i++) {\n      this.compileTemplate(template.children[i], args.item, false);\n    }\n    for (var i = 0; i < groupTemplate.children.length; i++) {\n      this.compileTemplate(groupTemplate.children[i], args.item, true);\n    }\n    args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n    args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n    var element = args.curData.isHeader ? groupTemplate : template;\n    if (element.firstElementChild && !this.listViewInstance.isReact && !this.listViewInstance.isVue) {\n      args.item.insertBefore(element.firstElementChild, null);\n    }\n  };\n  Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n    var _this = this;\n    var subNode = {};\n    subNode.onChange = function (value) {\n      var groupTemplateElements;\n      var templateElements;\n      if (_this.listViewInstance.isVue) {\n        groupTemplateElements = _this.groupTemplateFunction(value);\n        templateElements = _this.templateFunction(value);\n      } else {\n        groupTemplateElements = _this.groupTemplateFunction(value, _this.listViewInstance);\n        templateElements = _this.templateFunction(value, _this.listViewInstance);\n      }\n      if (_this.listViewInstance.template && _this.listViewInstance.isReact) {\n        _this.listViewInstance.renderReactTemplates();\n      }\n      var currentTemplate = templateElements;\n      if (value.isHeader) {\n        currentTemplate = groupTemplateElements;\n      }\n      [].slice.call(currentTemplate).forEach(function (currentElement) {\n        var RemovableClass = element.classList.value.replace('e-checkbox', '');\n        RemovableClass = RemovableClass.replace('e-checkbox-left', '');\n        RemovableClass = RemovableClass.replace('e-checkbox-right', '');\n        removeClass([element], RemovableClass.split(' ').filter(function (css) {\n          return css;\n        }));\n        addClass([element], Array.from(currentElement.classList));\n        for (var i = 0; i < element.attributes.length; i++) {\n          if (element.attributes[i].name != 'class') {\n            var newData = currentElement.getAttribute(element.attributes[i].name);\n            element.setAttribute(element.attributes[i].name, newData);\n          }\n        }\n        [].slice.call(element.children).forEach(function (ele) {\n          if (!ele.classList.contains('e-listview-checkbox') && !(ele.classList.contains('e-checkbox-left') || ele.classList.contains('e-checkbox-right'))) {\n            ele.remove();\n          }\n        });\n        [].slice.call(currentElement.children).forEach(function (ele) {\n          element.appendChild(ele);\n        });\n      });\n    };\n    this.updateContextData(item, subNode, isHeader);\n  };\n  Virtualization.prototype.onChange = function (newData, listElement) {\n    listElement.context.data = newData;\n    // eslint-disable-next-line max-len\n    var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n    // eslint-disable-next-line max-len\n    var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n    // eslint-disable-next-line\n    if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n      // eslint-disable-next-line\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'flatList';\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'groupList';\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader) {\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else {\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    }\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n    if (isHeader) {\n      listElement.context.nodes.groupTemplateNodes.push(node);\n    } else {\n      listElement.context.nodes.flatTemplateNodes.push(node);\n    }\n  };\n  Virtualization.prototype.reRenderUiVirtualization = function () {\n    this.wireScrollEvent(true);\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n    this.listViewInstance.preRender();\n    // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  };\n  Virtualization.prototype.updateUI = function (element, index, targetElement) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    var onChange = this.isNgTemplate() ? this.onNgChange : this.isVueFunctionTemplate() ? this.onVueChange : this.onChange;\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      var curViewDS = this.listViewInstance.curViewDS[index];\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ?\n      // eslint-disable-next-line\n      curViewDS[this.listViewInstance.fields.id] : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n    this.changeElementAttributes(element, index);\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  };\n  /**\n   * Handles the UI change in vue for the list view.\n   *\n   * @param {DataSource} newData - The new data source for the list view.\n   * @param {ElementContext} listElement - The HTML element context for the list view.\n   * @param {Virtualization} virtualThis - The virtualization context for the list view.\n   */\n  Virtualization.prototype.onVueChange = function (newData, listElement, virtualThis) {\n    var liItem = ListBase.createListItemFromJson(virtualThis.listViewInstance.createElement,\n    // eslint-disable-next-line\n    [newData], virtualThis.listViewInstance.listBaseOption, null, null, virtualThis.listViewInstance);\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n    listElement.appendChild(liItem[0].firstChild);\n  };\n  Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    // eslint-disable-next-line\n    var templateCompiler = compile(virtualThis.listViewInstance.template);\n    var resultElement = templateCompiler(newData);\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n    listElement.appendChild(resultElement[0]);\n  };\n  Virtualization.prototype.getModuleName = function () {\n    return 'virtualization';\n  };\n  Virtualization.prototype.destroy = function () {\n    this.wireScrollEvent(true);\n    this.topElement = null;\n    this.bottomElement = null;\n  };\n  return Virtualization;\n}();\nexport { Virtualization };","map":{"version":3,"names":["classNames","EventHandler","append","isNullOrUndefined","detach","removeClass","addClass","compile","formatUnit","ListBase","DataManager","listElementCount","windowElementCount","Virtualization","instance","elementDifference","listViewInstance","prototype","isNgTemplate","templateRef","isVueFunctionTemplate","isVue","template","uiVirtualization","commonTemplate","fields","text","templateFunction","groupTemplateFunction","groupTemplate","wireScrollEvent","curViewDS","firstDs","slice","ulElement","curUL","createList","createElement","listBaseOption","contentContainer","className","container","element","appendChild","listItemHeight","firstElementChild","getBoundingClientRect","height","expectedDomItemCount","ValidateItemCount","domItemCount","Object","keys","length","uiFirstIndex","uiLastIndex","otherDs","listItems","createListItemFromJson","liCollection","querySelectorAll","topElement","insertBefore","bottomElement","totalHeight","style","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","destroy","isWindow","onVirtualScroll","onVirtualUiScroll","bind","window","addEventListener","add","removeEventListener","updateUl","remove","updateUlContainer","e","virtualElementContainer","querySelector","liElementHeight","updateLiElementHeight","Math","round","target","documentElement","scrollTop","top","dataSourceLength","parseFloat","itemCount","innerHeight","indexOf","uiIndices","data","i","showCheckBox","isChecked","activeIndices","push","enabled","disabledItemIndices","items","listItem","index","context","viewContainerRef","get","refreshItemHeight","nextSibling","getscrollerHeight","startingHeight","pageYOffset","_a","document","headerEle","scrollPosition","scroll","floor","onLongScroll","onNormalScroll","onUIScrolled","isScrollingDown","elements","updateUI","nextElementSibling","previousElementSibling","updateUiContent","curViewDs","dataSource","dataset","uid","generateId","getElementsByClassName","listItemText","innerHTML","toString","id","showIcon","listIcon","iconCss","textContent","groupBy","checkListWrapper","checkboxWrapper","cloneNode","isHeader","classList","checklist","checkbox","changeElementAttributes","disable","display","hiddenItemIndices","checklistElement","selected","focused","removeAttribute","checked","setAttribute","activeIndex","contains","groupListItem","findDSAndIndexFromId","ds","_this","resultJSON","getElementUID","some","getSelectedItems","dataCollection","textCollection","curViewDS_1","indices","map","curViewDS_2","indexArray","dataSource_1","undefined","selectItem","obj","resutJSON","isSelected","splice","getLiFromObjOrElement","setCheckboxLI","setSelectLI","eventArgs","trigger","removeSelect","enableItem","disableItem","showItem","hideItem","removeItem","removeUiItem","listDataSource","localData","setViewDataSource","li","Array","call","checkedItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","scrollTo","increment","ind","addItem","currentItem","itemCreated","createUIItem","findItemFromDS","createAndInjectNewItem","itemData","targetEle","args","templateData","curData","isReact","renderCheckbox","virtualCheckBox","outerHTML","div_1","nodes","renderReactTemplates","forEach","ele","children","checkBoxPosition","childNodes","div_2","headerData","item","flatTemplateNodes","groupTemplateNodes","compileTemplate","type","subNode","onChange","value","groupTemplateElements","templateElements","currentTemplate","currentElement","RemovableClass","replace","split","filter","css","from","attributes","name","newData","getAttribute","updateContextData","listElement","node","reRenderUiVirtualization","preRender","header","setLocalData","targetElement","onNgChange","onVueChange","virtualThis","lastChild","removeChild","firstChild","templateCompiler","resultElement","getModuleName"],"sources":["/Users/admin/PycharmProjects/gatewayex/frontend/node_modules/@syncfusion/ej2-lists/src/list-view/virtualization.js"],"sourcesContent":["import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * Checks if the platform is a Vue and its template property is a function type.\n     *\n     * @returns {boolean} indicating the result of the check\n     */\n    Virtualization.prototype.isVueFunctionTemplate = function () {\n        return this.listViewInstance.isVue && typeof this.listViewInstance.template === 'function';\n    };\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        this.commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        this.templateFunction = compile(this.listViewInstance.template || this.commonTemplate, this.listViewInstance);\n        this.groupTemplateFunction = compile(this.listViewInstance.groupTemplate || this.commonTemplate, this.listViewInstance);\n        this.wireScrollEvent(false);\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.container });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        var listItems = ListBase.createListItemFromJson(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            if (this.listViewInstance.isWindow === true) {\n                window.removeEventListener('scroll', this.onVirtualScroll);\n                window.removeEventListener('scroll', this.updateUl);\n            }\n            else {\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n            }\n        }\n    };\n    Virtualization.prototype.updateUlContainer = function (e) {\n        var listDiff;\n        var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n        if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n            this.listViewInstance.updateLiElementHeight();\n        }\n        if (this.listViewInstance.isWindow) {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        else {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        if (((listDiff - 1) * this.listViewInstance.liElementHeight) < 0) {\n            virtualElementContainer.style.top = '0px';\n        }\n        else {\n            virtualElementContainer.style.top = (listDiff) * this.listViewInstance.liElementHeight + 'px';\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                // eslint-disable-next-line max-len\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        var data = this.listViewInstance.curViewDS;\n        for (var i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) &&\n                !data[i][this.listViewInstance.fields.enabled]) {\n                // eslint-disable-next-line\n                (this.uiIndices.disabledItemIndices.push(i));\n            }\n        }\n        if (this.isNgTemplate()) {\n            var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (var index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function (e) {\n        var _a;\n        var startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n        }\n        this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n        if (typeof this.listViewInstance.onUIScrolled === 'function') {\n            this.listViewInstance.onUIScrolled();\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (var i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        // eslint-disable-next-line\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDs[index][this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.id]) : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.text]);\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    // eslint-disable-next-line\n                    fields[_this.listViewInstance.fields.id]\n                        // eslint-disable-next-line\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data)) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection = [];\n            var textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    var indices = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS_1[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    var indexArray = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS_2[indexArray[i]][\"\" + text]);\n                        // eslint-disable-next-line\n                        dataCollection.push(curViewDS_2[indexArray[i]]);\n                    }\n                    // eslint-disable-next-line\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    // eslint-disable-next-line\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        // eslint-disable-next-line\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        // eslint-disable-next-line\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            var data = this.listViewInstance.curViewDS;\n            for (var index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                if (this.listViewInstance.isWindow === true) {\n                    window.scrollTo(0, (pageYOffset + this.listItemHeight));\n                }\n                else {\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n                }\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var keys = Object.keys(this.uiIndices);\n        for (var ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource) {\n        for (var i = 0; i < data.length; i++) {\n            var currentItem = data[i];\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index);\n                // check for group header item needs to be added\n                var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index - 1);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n            var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        var template = document.createElement('div');\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        if (this.listViewInstance.isReact) {\n            this.commonTemplate = null;\n        }\n        if (this.listViewInstance.showCheckBox) {\n            // eslint-disable-next-line\n            this.listViewInstance.renderCheckbox(args);\n            if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                var div_1 = document.createElement('div');\n                var nodes = this.templateFunction(this.templateData, this.listViewInstance);\n                if (this.listViewInstance.template && this.listViewInstance.isReact) {\n                    this.listViewInstance.renderReactTemplates();\n                }\n                [].slice.call(nodes).forEach(function (ele) {\n                    div_1.appendChild(ele);\n                });\n                if (div_1.children && div_1.children[0]) {\n                    div_1.children[0].classList.add('e-checkbox');\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div_1.children[0].classList.add('e-checkbox-left');\n                    }\n                    else {\n                        div_1.children[0].classList.add('e-checkbox-right');\n                    }\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div_1.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div_1.childNodes[0].children[0]);\n                    }\n                    else {\n                        div_1.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                    }\n                    template.innerHTML = div_1.innerHTML;\n                }\n            }\n            else {\n                var div_2 = document.createElement('div');\n                var nodes = this.templateFunction(this.templateData, this.listViewInstance);\n                if (this.listViewInstance.template && this.listViewInstance.isReact) {\n                    this.listViewInstance.renderReactTemplates();\n                }\n                [].slice.call(nodes).forEach(function (ele) {\n                    div_2.appendChild(ele);\n                });\n                template.innerHTML = div_2.innerHTML;\n            }\n        }\n        else {\n            var nodes = this.templateFunction(this.templateData, this.listViewInstance);\n            if (this.listViewInstance.template && this.listViewInstance.isReact) {\n                this.listViewInstance.renderReactTemplates();\n            }\n            [].slice.call(nodes).forEach(function (ele) {\n                template.appendChild(ele);\n            });\n        }\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        var groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            var nodes = this.groupTemplateFunction(this.headerData, this.listViewInstance);\n            if (this.listViewInstance.template && this.listViewInstance.isReact) {\n                this.listViewInstance.renderReactTemplates();\n            }\n            [].slice.call(nodes).forEach(function (ele) {\n                groupTemplate.appendChild(ele);\n            });\n        }\n        if ((!this.listViewInstance.isReact || (typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\")) ||\n            (typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\"))) && !this.listViewInstance.isVue) {\n            args.item.innerHTML = '';\n        }\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (var i = 0; i < template.children.length; i++) {\n            this.compileTemplate(template.children[i], args.item, false);\n        }\n        for (var i = 0; i < groupTemplate.children.length; i++) {\n            this.compileTemplate(groupTemplate.children[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        var element = args.curData.isHeader ? groupTemplate : template;\n        if (element.firstElementChild && !this.listViewInstance.isReact && !this.listViewInstance.isVue) {\n            args.item.insertBefore(element.firstElementChild, null);\n        }\n    };\n    Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n        var _this = this;\n        var subNode = {};\n        subNode.onChange = function (value) {\n            var groupTemplateElements;\n            var templateElements;\n            if (_this.listViewInstance.isVue) {\n                groupTemplateElements = _this.groupTemplateFunction(value);\n                templateElements = _this.templateFunction(value);\n            }\n            else {\n                groupTemplateElements = _this.groupTemplateFunction(value, _this.listViewInstance);\n                templateElements = _this.templateFunction(value, _this.listViewInstance);\n            }\n            if (_this.listViewInstance.template && _this.listViewInstance.isReact) {\n                _this.listViewInstance.renderReactTemplates();\n            }\n            var currentTemplate = templateElements;\n            if (value.isHeader) {\n                currentTemplate = groupTemplateElements;\n            }\n            [].slice.call(currentTemplate).forEach(function (currentElement) {\n                var RemovableClass = element.classList.value.replace('e-checkbox', '');\n                RemovableClass = RemovableClass.replace('e-checkbox-left', '');\n                RemovableClass = RemovableClass.replace('e-checkbox-right', '');\n                removeClass([element], RemovableClass.split(' ').filter(function (css) { return css; }));\n                addClass([element], Array.from(currentElement.classList));\n                for (var i = 0; i < element.attributes.length; i++) {\n                    if (element.attributes[i].name != 'class') {\n                        var newData = currentElement.getAttribute(element.attributes[i].name);\n                        element.setAttribute(element.attributes[i].name, newData);\n                    }\n                }\n                [].slice.call(element.children).forEach(function (ele) {\n                    if (!ele.classList.contains('e-listview-checkbox') && !(ele.classList.contains('e-checkbox-left') || ele.classList.contains('e-checkbox-right'))) {\n                        ele.remove();\n                    }\n                });\n                [].slice.call(currentElement.children).forEach(function (ele) {\n                    element.appendChild(ele);\n                });\n            });\n        };\n        this.updateContextData(item, subNode, isHeader);\n    };\n    Virtualization.prototype.onChange = function (newData, listElement) {\n        listElement.context.data = newData;\n        // eslint-disable-next-line max-len\n        var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        // eslint-disable-next-line max-len\n        var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        // eslint-disable-next-line\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            // eslint-disable-next-line\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader) {\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else {\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        var onChange = this.isNgTemplate() ? this.onNgChange : (this.isVueFunctionTemplate()) ? this.onVueChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDS[this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDS[this.listViewInstance.fields.id]) : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    /**\n     * Handles the UI change in vue for the list view.\n     *\n     * @param {DataSource} newData - The new data source for the list view.\n     * @param {ElementContext} listElement - The HTML element context for the list view.\n     * @param {Virtualization} virtualThis - The virtualization context for the list view.\n     */\n    Virtualization.prototype.onVueChange = function (newData, listElement, virtualThis) {\n        var liItem = ListBase.createListItemFromJson(virtualThis.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [newData], virtualThis.listViewInstance.listBaseOption, null, null, virtualThis.listViewInstance);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(liItem[0].firstChild);\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        // eslint-disable-next-line\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n        this.topElement = null;\n        this.bottomElement = null;\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}