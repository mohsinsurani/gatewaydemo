{"ast":null,"code":"var _jsxFileName = \"/Users/admin/PycharmProjects/gatewayex/frontend/src/components/admin_control.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ListView from '../listview'; // Import the GridView component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: 1,\n  name: 'Item 1',\n  description: 'Description 1'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}\n\n// Add more items as needed\n];\n\nfunction AdminControl({\n  userType\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const submit = () => {\n    if (username.trim() === '') {\n      // Display an error message if the username is empty\n      setErrorMessage(`${userType} fields cannot be empty`);\n    } else {\n      // Clear any previous error message\n      setErrorMessage('');\n      //   this.props.history.push(AdminAccess());\n\n      // Handle login logic here (e.g., send username to the server)\n      console.log(`Logging in as ${userType.value} with username: ${username}`);\n    }\n  };\n  const getLoginTitle = () => {\n    switch (userType) {\n      case 'Gateway':\n        return 'Delete the Gateway?';\n      default:\n        return 'Create an operator';\n    }\n  };\n  const getPlc = () => {\n    return `${userType} username`;\n  };\n  const geth2title = () => {\n    console.log(userType + \"Selected\");\n    switch (userType) {\n      case 'Gateway':\n        return `Gateway Deletion`;\n      default:\n        return `Operator Creation`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: geth2title()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: getPlc(),\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: '10px 24px'\n      },\n      onClick: submit,\n      children: getLoginTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminControl, \"/KftXeHJkscCitZvAfe4EMPJTG8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminControl;\nfunction List(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: props.list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_c2 = List;\nfunction AdminAccess() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminControl, {\n        userType: \"Operator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AdminControl, {\n        userType: \"Gateway\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"List of Operators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: 220,\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"List of Gateways\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_c3 = AdminAccess;\nexport default AdminAccess;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AdminControl\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"AdminAccess\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ListView","jsxDEV","_jsxDEV","data","id","name","description","AdminControl","userType","_s","username","setUsername","errorMessage","setErrorMessage","navigate","submit","trim","console","log","value","getLoginTitle","getPlc","geth2title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","style","margin","onClick","_c","List","props","display","flexDirection","list","map","item","_c2","AdminAccess","paddingLeft","_c3","$RefreshReg$"],"sources":["/Users/admin/PycharmProjects/gatewayex/frontend/src/components/admin_control.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport ListView from '../listview'; // Import the GridView component\n\nconst data = [\n    {id: 1, name: 'Item 1', description: 'Description 1'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n    {id: 2, name: 'Item 2', description: 'Description 2'},\n\n    // Add more items as needed\n];\n\nfunction AdminControl({userType}) {\n    const [username, setUsername] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n    const submit = () => {\n        if (username.trim() === '') {\n            // Display an error message if the username is empty\n            setErrorMessage(`${userType} fields cannot be empty`);\n        } else {\n            // Clear any previous error message\n            setErrorMessage('');\n            //   this.props.history.push(AdminAccess());\n\n            // Handle login logic here (e.g., send username to the server)\n            console.log(`Logging in as ${userType.value} with username: ${username}`);\n        }\n    };\n\n    const getLoginTitle = () => {\n        switch (userType) {\n            case 'Gateway':\n                return 'Delete the Gateway?';\n            default:\n                return 'Create an operator';\n        }\n    };\n\n    const getPlc = () => {\n    return `${userType} username`;\n  };\n\n    const geth2title = () => {\n        console.log(userType + \"Selected\")\n        switch (userType) {\n            case 'Gateway':\n                return `Gateway Deletion`;\n            default:\n                return `Operator Creation`;\n        }\n    };\n    return (\n        <div className=\"login-form\">\n            <h2>{geth2title()}</h2>\n            <input\n                type=\"text\"\n                placeholder={getPlc()}\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                className=\"text-input\"\n            />\n            <button style={{ margin: '10px 24px' }} onClick={submit}>{getLoginTitle()}</button>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        </div>\n    );\n}\n\nfunction List(props) {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      {props.list.map((item) => (\n        <div>{item.description}</div>\n      ))}\n    </div>\n  );\n}\n\nfunction AdminAccess() {\n    return (\n        <div>\n            <div className=\"left-container\">\n                <AdminControl userType=\"Operator\"/>\n                <AdminControl userType='Gateway'/>\n            </div>\n            <div>\n     <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <p>List of Operators</p>\n        {data.map((item) => (\n          <div>{item.description}</div>\n        ))}\n      </div>\n      <div style={{ paddingLeft:220, display: \"flex\", flexDirection: \"column\" }}>\n                    <p>List of Gateways</p>\n        {data.map((item) => (\n          <div>{item.description}</div>\n        ))}\n      </div>\n    </div>\n                    </div>\n    </div>\n\n    );\n}\n\nexport default AdminAccess;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}