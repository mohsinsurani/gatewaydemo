{"ast":null,"code":"var _jsxFileName = \"/Users/admin/PycharmProjects/gatewayex/frontend/src/components/admin_control.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport GridView from '../gridview.css'; // Import the GridView component\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 22\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  }\n});\nconst FlatListBasics = () => {\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(FlatList, {\n      data: [{\n        key: 'Devin'\n      }, {\n        key: 'Dan'\n      }, {\n        key: 'Dominic'\n      }, {\n        key: 'Jackson'\n      }, {\n        key: 'James'\n      }, {\n        key: 'Joel'\n      }, {\n        key: 'John'\n      }, {\n        key: 'Jillian'\n      }, {\n        key: 'Jimmy'\n      }, {\n        key: 'Julie'\n      }],\n      renderItem: ({\n        item\n      }) => /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.item,\n        children: item.key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = FlatListBasics;\nconst data = [{\n  id: 1,\n  name: 'Item 1',\n  description: 'Description 1'\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2'\n}\n// Add more items as needed\n];\n\nfunction AdminControl({\n  userType\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const submit = () => {\n    if (username.trim() === '') {\n      // Display an error message if the username is empty\n      setErrorMessage(`${userType} fields cannot be empty`);\n    } else {\n      // Clear any previous error message\n      setErrorMessage('');\n      //   this.props.history.push(AdminAccess());\n\n      // Handle login logic here (e.g., send username to the server)\n      console.log(`Logging in as ${userType.value} with username: ${username}`);\n    }\n  };\n  const getLoginTitle = () => {\n    switch (userType) {\n      case 'Gateway':\n        return 'Delete the Gateway?';\n      default:\n        return 'Create an operator';\n    }\n  };\n  const geth2title = () => {\n    console.log(userType + \"Selected\");\n    switch (userType) {\n      case 'Gateway':\n        return `Gateway Deletion`;\n      case 'Operator':\n        return `Operator Deletion`;\n      default:\n        return `Operator Creation`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: geth2title()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"${userType} name\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: getLoginTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminControl, \"/KftXeHJkscCitZvAfe4EMPJTG8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = AdminControl;\nfunction AdminAccess() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: [/*#__PURE__*/_jsxDEV(AdminControl, {\n      userType: \"Operator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"eggs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminControl, {\n      userType: \"Gateway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridView, {\n      data: FlatListBasics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_c3 = AdminAccess;\nexport default AdminAccess;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FlatListBasics\");\n$RefreshReg$(_c2, \"AdminControl\");\n$RefreshReg$(_c3, \"AdminAccess\");","map":{"version":3,"names":["React","useState","Link","useNavigate","GridView","FlatList","StyleSheet","Text","View","jsxDEV","_jsxDEV","styles","create","container","flex","paddingTop","item","padding","fontSize","height","FlatListBasics","style","children","data","key","renderItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","id","name","description","AdminControl","userType","_s","username","setUsername","errorMessage","setErrorMessage","navigate","submit","trim","console","log","value","getLoginTitle","geth2title","className","type","placeholder","onChange","e","target","onClick","_c2","AdminAccess","_c3","$RefreshReg$"],"sources":["/Users/admin/PycharmProjects/gatewayex/frontend/src/components/admin_control.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport GridView from '../gridview.css'; // Import the GridView component\nimport {FlatList, StyleSheet, Text, View} from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 22,\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n});\n\nconst FlatListBasics = () => {\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={[\n          {key: 'Devin'},\n          {key: 'Dan'},\n          {key: 'Dominic'},\n          {key: 'Jackson'},\n          {key: 'James'},\n          {key: 'Joel'},\n          {key: 'John'},\n          {key: 'Jillian'},\n          {key: 'Jimmy'},\n          {key: 'Julie'},\n        ]}\n        renderItem={({item}) => <Text style={styles.item}>{item.key}</Text>}\n      />\n    </View>\n  );\n};\n\nconst data = [\n  { id: 1, name: 'Item 1', description: 'Description 1' },\n  { id: 2, name: 'Item 2', description: 'Description 2' },\n  // Add more items as needed\n];\nfunction AdminControl({ userType }) {\n    const [username, setUsername] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n    const submit = () => {\n        if (username.trim() === '') {\n            // Display an error message if the username is empty\n            setErrorMessage(`${userType} fields cannot be empty`);\n        } else {\n            // Clear any previous error message\n            setErrorMessage('');\n            //   this.props.history.push(AdminAccess());\n\n            // Handle login logic here (e.g., send username to the server)\n            console.log(`Logging in as ${userType.value} with username: ${username}`);\n        }\n    };\n\n    const getLoginTitle = () => {\n        switch (userType) {\n            case 'Gateway':\n                return 'Delete the Gateway?';\n            default:\n                return 'Create an operator';\n        }\n    };\n\n    const geth2title = () => {\n        console.log(userType + \"Selected\")\n        switch (userType) {\n            case 'Gateway':\n                return `Gateway Deletion`;\n            case 'Operator':\n                return `Operator Deletion`;\n            default:\n                return `Operator Creation`;\n        }\n    };\n    return (\n        <div className=\"login-form\">\n            <h2>{geth2title()}</h2>\n            <input\n                type=\"text\"\n                placeholder=\"${userType} name\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                className=\"text-input\"\n            />\n            <button onClick={submit}>{getLoginTitle()}</button>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        </div>\n    );\n}\n\nfunction AdminAccess() {\n    return (\n        <div className=\"center-container\">\n            <AdminControl userType=\"Operator\" />\n            <p>eggs</p>\n            <AdminControl userType='Gateway' />\n                  <GridView data={FlatListBasics} /> {/* Render the GridView component */}\n        </div>\n    );\n}\n\nexport default AdminAccess;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}